def _asdict(self):
    """Return a new OrderedDict which
    maps field names to their values"""
    return OrderedDict(zip(self._fields, self))


def _replace(_self, **kwds):
    """Return a new Utente object replacing
    specified fields with new values"""
    result = _self._make(
        map(kwds.pop, ('nome', 'cognome', 'email'), _self)
    )
    if kwds:
        raise ValueError('Got unexpected field names: %r'
                         % kwds.keys())
    return result

def __getnewargs__(self):
    """Return self as a plain tuple.
    Used by copy and pickle."""
    return tuple(self)

__dict__ = _property(_asdict)

def __getstate__(self):
    'Exclude the OrderedDict from pickling'
    pass

nome = _property(_itemgetter(0), doc='Alias for field number 0')
cognome = _property(_itemgetter(1), doc='Alias for field number 1')
email = _property(_itemgetter(2), doc='Alias for field number 2')